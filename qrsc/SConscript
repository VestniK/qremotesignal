from checkers import *

Import('BaseEnv')

env = BaseEnv.Clone()
env.Append(CPPPATH = ['.'])
env.EnableQt4Modules(['QtCore','QtXmlPatterns'])

env['GenerateMan'] = True
if  not (ARGUMENTS.get('nocheck') or GetOption('clean') or GetOption('help') ) :
   conf = Configure(env, custom_tests = qrs_custom_tests)
   if not conf.CheckCXX(): Exit(1)
   if not conf.CheckQt4Version("4.5.0"): Exit(1)
   if not conf.CheckQt4Tool('moc'): Exit(1)
   if not conf.CheckQt4Tool('rcc'): Exit(1)
   if not conf.CheckQt4Module('QtCore'): Exit(1)
   if not conf.CheckQt4Module('QtXmlPatterns'): Exit(1)
   if not conf.CheckProg('help2man'): env['GenerateMan'] = False
   conf.Finish()

env['Gch'] = env.Gch('qrsc_pch.h')
env.NoClean(env['Gch'])
env.Append(CPPFLAGS=Split('-include qrsc_pch.h'))
env['LIBS'] = [lib for lib in env['LIBS'] if lib != 'QtNetwork']

Resources=['templates.qrc']
Sources=['qrsc.cpp','qtextserializer.cpp','interfacedocument.cpp',
         'interfacecompiler.cpp','argvparser.cpp']
Sources += env.Qrc(Resources)

env.AlwaysBuild( env.Config('config.h.in') )
BaseEnv['QRSC'] = env.Program('qrsc',Sources)[0]
env.InstallProgram(BaseEnv['QRSC'])

if env['GenerateMan'] :
   manual = env.Command('qrsc.1',BaseEnv['QRSC'],'help2man -N -o $TARGET $SOURCE')
   NoClean(manual)
   env.InstallMan('qrsc.1',1)

#localization related part
TranslationsLocales = ['ru']

for locale in TranslationsLocales :
   translation = env.Ts('qrsc.%s.ts'%locale, Sources)
   env.NoClean(translation)
   env.Precious(translation)
   qm = env.Qm(translation)
   env.InstallData('i18n',qm)
